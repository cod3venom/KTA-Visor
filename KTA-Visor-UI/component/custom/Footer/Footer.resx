<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="sfBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAE0AAAATCAYAAADVjYA3AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EgAACxIB0t1+/AAAA5tJREFUWEftl89rE0EUx/Mn5Nh2t3YqKAgeiiCehIB4EZFiT0LFYDdR8WBACu0m
        0uA/0N491IP3nDznT8jNi4dctJv0kj8hvs/svM1km5i02ENNv/CYX292Zz55b2ZTOI/M0pJZD8LhGVte
        X3Mu18orD+3hve3hiydfhh9f/WjV3/SPsf2oV3Pui6ubweqxAGqnFnR8aM9Kn4f1Si9vbTd1cWVWgq4P
        yrdraCITrrbWgSRmgvDI9l1D+7sEBGlogZCW9E2C9ujBOwssev79MqCVxExavQISIHNBi7bOwmpU+oO4
        0uvG1V7LPmykD2JdsaErN8UQfvYdOQ3EiHLg4b8hxuVCfaL2oqRk3z1mJzZTLl0muFEDFmaCoGz7wrAl
        oNKLwAGcBC2OkqZ9yLiIGGABCAiUtItiRKRGJW2NLiBRxx9fSp5NXaX+lBZauo7+cfw6KWP0MVYrd4t7
        bxNDSRtpW40+v824dXTKz59b7nPDRuIkaGLt/MtEAGCzh2L6Ut2sQqNOFHW8OhE4DdqBGHUiEt+SQgOW
        tDPF5dONRtQf6Brjap+5BdZar/a66ZiAjvoH6iMZ07L194O1vXJipN7VMZ0/URrude+byyyFJYBhW48P
        h7vlnwors4b7dXMiTdgkBiRNT4WGsXkFPgsa48xBrG9ToQFB03O38mtD+thwp1brFhs7vSN8iBgp2wJr
        wHoZww9Yvh/QAApc2+/ewXPTV+eU/XJeyvnQsNp2Z15oCCDAyqenwvRTexY0QOk8npFF2lh6StTTp3sY
        gbWlQEsvLPXTj/LGzu9N2im0XsfWPbPRLADseWWWlzUCJuqC0EgX3Tjy2xphGonqMwsabX5tSnw72Y+c
        S097ObmLKa4kZXxcBGbQmhJ5+AGc9qfo9BA/B20EV1KV99izTSHowe9r6n9NsTmh6RnFhv0SsRhMfbB5
        zjSFDQzOteY0aPXopObW1k5TN71RaWPWSSTrbuLnzj/GLDQXldl8UtWe2wIgjbQwLEknlO0DG9WkqdBu
        r90Z3r11PzPa50xPopgN+eNEi54PpC9jQKPUy0L7dFw19jwbLUSBnD20fbFJYPpriyXa4sppdjbhwzh9
        WaoLNB1jPjbp+foLOAj9Y4U25ct/ZO4FV1WyB/ZtvzE1otzQbLnJDsbiQENcAFwaUyNqmvaj5Kv/Rb1I
        0P6ZjDFFsxI2Xz795kWgtbb9VZxd6Gv5f5celGr2BllYFQp/AGDG117BSdKSAAAAAElFTkSuQmCC
</value>
  </data>
</root>