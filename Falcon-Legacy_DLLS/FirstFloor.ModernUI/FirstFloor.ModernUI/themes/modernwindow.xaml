<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:modernui="clr-namespace:FirstFloor.ModernUI"
                    xmlns:controls="clr-namespace:FirstFloor.ModernUI.Windows.Controls"
                    xmlns:navigation="clr-namespace:FirstFloor.ModernUI.Windows.Navigation">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Button.xaml"/>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml"/>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/TextBlock.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Style TargetType="{x:Type controls:ModernWindow}">
    <Setter Property="controls:ModernWindow.BackgroundContent"
            Value="{DynamicResource WindowBackgroundContent}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource WindowText}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource WindowBorder}"/>
    <Setter Property="FrameworkElement.Width" Value="800"/>
    <Setter Property="FrameworkElement.Height" Value="640"/>
    <Setter Property="FrameworkElement.MinWidth" Value="320"/>
    <Setter Property="FrameworkElement.MinHeight" Value="320"/>
    <Setter Property="Window.ResizeMode" Value="CanResizeWithGrip"/>
    <Setter Property="FrameworkElement.UseLayoutRounding" Value="true"/>
    <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type controls:ModernWindow}">
          <Border x:Name="WindowBorder"
                  Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
            <Border.Background>
              <SolidColorBrush x:Name="WindowBorderBackground" Color="{DynamicResource WindowBackgroundColor}"/>
            </Border.Background>
            <FrameworkElement.Resources>
              <Storyboard x:Key="BackgroundAnimation">
                <ColorAnimation Storyboard.TargetName="WindowBorderBackground" Storyboard.TargetProperty="Color"
                                To="{DynamicResource WindowBackgroundColor}" Duration="0:0:.6"/>
              </Storyboard>
            </FrameworkElement.Resources>
            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1">
              <AdornerDecorator>
                <Grid x:Name="LayoutRoot">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <ContentControl Grid.RowSpan="5" Content="{TemplateBinding controls:ModernWindow.BackgroundContent}"/>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{TemplateBinding Window.Title}" Margin="8,0" VerticalAlignment="Center"
                               Style="{StaticResource ModernWindowTitle}"
                               DataContext="{TemplateBinding controls:ModernWindow.IsTitleVisible}"
                               Visibility="{Binding Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <ItemsControl Grid.Column="1" ItemsSource="{TemplateBinding controls:ModernWindow.TitleLinks}" Margin="0,0,24,0"
                                  WindowChrome.IsHitTestVisibleInChrome="true">
                      <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                          <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                      </ItemsControl.ItemsPanel>
                      <ItemsControl.ItemTemplate>
                        <DataTemplate>
                          <StackPanel Orientation="Horizontal">
                            <Line x:Name="Separator" X1=".5" Y1="3" X2=".5" Y2="12" Margin="5,0" VerticalAlignment="Center"
                                  Stroke="{DynamicResource SeparatorBackground}"/>
                            <Button Command="navigation:LinkCommands.NavigateLink" Style="{StaticResource SystemButtonLink}"
                                    Content="{Binding DisplayName}" CommandParameter="{Binding Source}"
                                    CommandTarget="{Binding ElementName=ContentFrame}"/>
                          </StackPanel>
                          <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource PreviousData}}" Value="{x:Null}">
                              <Setter TargetName="Separator" Property="UIElement.Visibility" Value="Collapsed"/>
                            </DataTrigger>
                          </DataTemplate.Triggers>
                        </DataTemplate>
                      </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Border Grid.Column="2" Background="{DynamicResource Accent}" Width="36" Height="36" Margin="8,0"
                            DataContext="{TemplateBinding controls:ModernWindow.LogoData}"
                            Visibility="{Binding Converter={StaticResource NullToVisibilityConverter}, ConverterParameter=inverse}">
                      <Path Stretch="Fill" Fill="White" Width="24" Height="24" HorizontalAlignment="Center"
                            VerticalAlignment="Center" Data="{Binding}"/>
                    </Border>
                    <StackPanel Grid.Column="3" Orientation="Horizontal" VerticalAlignment="Top"
                                WindowChrome.IsHitTestVisibleInChrome="true">
                      <Button ToolTip="{x:Static modernui:Resources.Minimize}" Style="{StaticResource SystemButton}"
                              Command="{Binding Source={x:Static SystemCommands.MinimizeWindowCommand}}">
                        <ContentControl.Content>
                          <Grid Width="13" Height="12" RenderTransform="1,0,0,1,0,1">
                            <Path Data="M 0,6 L 8,6 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                  StrokeThickness="2"
                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                          </Grid>
                        </ContentControl.Content>
                      </Button>
                      <Grid Margin="1,0,1,0">
                        <Button x:Name="Restore" ToolTip="{x:Static modernui:Resources.Restore}"
                                Style="{StaticResource SystemButton}" Visibility="Collapsed"
                                Command="{Binding Source={x:Static SystemCommands.RestoreWindowCommand}}">
                          <ContentControl.Content>
                            <Grid Width="13" Height="12" UseLayoutRounding="true" RenderTransform="1,0,0,1,.5,.5">
                              <Path Data="M 2,0 L 8,0 8,6 M 0,3 L 6,3 M 0,2 L 6,2 6,8 0,8 Z" Width="8" Height="8"
                                    VerticalAlignment="Center" HorizontalAlignment="Center" StrokeThickness="1"
                                    Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                            </Grid>
                          </ContentControl.Content>
                        </Button>
                        <Button x:Name="Maximize" ToolTip="{x:Static modernui:Resources.Maximize}"
                                Style="{StaticResource SystemButton}"
                                Command="{Binding Source={x:Static SystemCommands.MaximizeWindowCommand}}">
                          <ContentControl.Content>
                            <Grid Width="13" Height="12">
                              <Path Data="M 0,1 L 9,1 9,8 0,8 Z" Width="9" Height="8" VerticalAlignment="Center"
                                    HorizontalAlignment="Center" StrokeThickness="2"
                                    Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                            </Grid>
                          </ContentControl.Content>
                        </Button>
                      </Grid>
                      <Button ToolTip="{x:Static modernui:Resources.Close}" Style="{StaticResource SystemCloseButton}"
                              Command="{Binding Source={x:Static SystemCommands.CloseWindowCommand}}">
                        <ContentControl.Content>
                          <Grid Width="13" Height="12" RenderTransform="1,0,0,1,0,1">
                            <Path Data="M 0,0 L 8,7 M 8,0 L 0,7 Z" Width="8" Height="7" VerticalAlignment="Center"
                                  HorizontalAlignment="Center" StrokeThickness="1.5"
                                  Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"/>
                          </Grid>
                        </ContentControl.Content>
                      </Button>
                    </StackPanel>
                  </Grid>
                  <Grid Row="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="42"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <controls:ModernMenu Grid.Column="1" LinkGroups="{TemplateBinding controls:ModernWindow.MenuLinkGroups}"
                                         SelectedSource="{Binding Source, ElementName=ContentFrame, Mode=TwoWay}"/>
                  </Grid>
                  <controls:ModernFrame x:Name="ContentFrame" Grid.Row="3" Grid.RowSpan="2" Margin="42,8,16,16"
                                        ContentLoader="{TemplateBinding controls:ModernWindow.ContentLoader}"
                                        Source="{Binding ContentSource, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                  <Grid x:Name="ResizeGrip" Row="2" Background="Transparent" Visibility="Collapsed"
                        HorizontalAlignment="Right" VerticalAlignment="Bottom"
                        WindowChrome.ResizeGripDirection="BottomRight">
                    <Path Width="12" Height="12" Margin="1" Stroke="{DynamicResource WindowText}" StrokeThickness="1"
                          Stretch="None"
                          Data="F1 M 1,10 L 3,10 M 5,10 L 7,10 M 9,10 L 11,10 M 2,9 L 2,11 M 6,9 L 6,11 M 10,9 L 10,11 M 5,6 L 7,6 M 9,6 L 11,6 M 6,5 L 6,7 M 10,5 L 10,7 M 9,2 L 11,2 M 10,1 L 10,3 "/>
                  </Grid>
                </Grid>
              </AdornerDecorator>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Window.IsActive" Value="true">
              <Setter Value="{DynamicResource WindowBorderActive}" Property="Control.BorderBrush"/>
            </Trigger>
            <Trigger Property="Window.WindowState" Value="Maximized">
              <Setter TargetName="Maximize" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="Restore" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="LayoutRoot" Property="FrameworkElement.Margin" Value="7"/>
            </Trigger>
            <Trigger Property="Window.WindowState" Value="Normal">
              <Setter TargetName="Maximize" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="Restore" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip"/>
                <Condition Property="Window.WindowState" Value="Normal"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ResizeGrip" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="WindowChrome.WindowChrome">
      <Setter.Value>
        <WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="false" NonClientFrameEdges="None"/>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>