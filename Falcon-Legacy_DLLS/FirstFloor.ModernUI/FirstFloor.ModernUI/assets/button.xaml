<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="SystemButtonBase" TargetType="{x:Type ButtonBase}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border Name="Chrome" Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="AlertButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource SystemButtonBase}">
    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
    <Setter Property="FrameworkElement.Margin" Value="8"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="UIElement.Opacity" Value=".7"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter Property="UIElement.Opacity" Value=".4"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="SystemButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource SystemButtonBase}">
    <Setter Property="FrameworkElement.Width" Value="{DynamicResource SystemButtonWidth}"/>
    <Setter Property="FrameworkElement.Height" Value="{DynamicResource SystemButtonHeight}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource ButtonText}"/>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource SystemButtonBackgroundOnMoseOver}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource SystemButtonForegroundOnMoseOver}"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource SystemButtonBackgroundIsPressed}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource SystemButtonForegroundIsPressed}"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="Control.Foreground" Value="{DynamicResource ButtonTextDisabled}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="SystemCloseButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource SystemButton}">
    <Setter Property="FrameworkElement.Width" Value="{DynamicResource CloseButtonWidth}"/>
    <Setter Property="Control.Background" Value="{DynamicResource CloseButtonBackground}"/>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource CloseButtonBackgroundOnMoseOver}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource CloseButtonForegroundOnMoseOver}"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource CloseButtonBackgroundIsPressed}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource CloseButtonForegroundIsPressed}"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="Control.Foreground" Value="{DynamicResource ButtonTextDisabled}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="SystemButtonLink" TargetType="{x:Type ButtonBase}"
         BasedOn="{StaticResource SystemButtonBase}">
    <Setter Property="Control.Foreground" Value="{DynamicResource LinkButtonText}"/>
    <Setter Property="FrameworkElement.Width" Value="NaN"/>
    <Setter Property="FrameworkElement.Height" Value="NaN"/>
    <Setter Property="Control.FontFamily" Value="Segoe UI"/>
    <Setter Property="Control.FontSize" Value="11"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border Name="Chrome" Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
            <TextBlock DataContext="{TemplateBinding ContentControl.Content}" Margin="{TemplateBinding Control.Padding}"
                       VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                       HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                       SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                       Text="{Binding Converter={StaticResource ToUpperConverter}}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="Control.Foreground" Value="{DynamicResource LinkButtonTextHover}"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter Property="Control.Foreground" Value="{DynamicResource LinkButtonTextPressed}"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="Control.Foreground" Value="{DynamicResource LinkButtonTextDisabled}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Background" Value="{DynamicResource ButtonBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource ButtonBorder}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource ButtonText}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="16,3,16,5"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border Name="Chrome" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource ButtonTextDisabled}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource ButtonBackgroundHover}" Property="Control.Background"/>
              <Setter Value="{DynamicResource ButtonBorderHover}" Property="Control.BorderBrush"/>
              <Setter Value="{DynamicResource ButtonTextHover}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{DynamicResource ButtonBackgroundPressed}" Property="Control.Background"/>
              <Setter Value="{DynamicResource ButtonBorderPressed}" Property="Control.BorderBrush"/>
              <Setter Value="{DynamicResource ButtonTextPressed}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <Setter TargetName="Chrome" Value="{DynamicResource Accent}" Property="Border.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type ToggleButton}"/>
  <Style BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type RepeatButton}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
  </Style>
  <Style BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}"/>
</ResourceDictionary>