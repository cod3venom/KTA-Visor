<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Style TargetType="{x:Type TextBoxBase}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="{DynamicResource InputText}"/>
    <Setter Property="Control.Background" Value="{DynamicResource InputBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource InputBorder}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="2,1,1,1"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="TextBoxBase.SelectionBrush" Value="{DynamicResource Accent}"/>
    <Setter Property="Validation.ErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <StackPanel Orientation="Horizontal">
            <Border BorderThickness="1" BorderBrush="#FFdc000c" VerticalAlignment="Top">
              <Grid>
                <AdornedElementPlaceholder x:Name="adorner" Margin="-1"/>
              </Grid>
            </Border>
            <Border x:Name="errorBorder" Background="#FFdc000c" Margin="8,0,0,0" Opacity="0" CornerRadius="0"
                    IsHitTestVisible="false" MinHeight="24">
              <TextBlock Foreground="White" Margin="8,2,8,3" TextWrapping="Wrap" VerticalAlignment="Center"
                         Text="{Binding ElementName=adorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"/>
            </Border>
          </StackPanel>
          <ControlTemplate.Triggers>
            <DataTrigger Value="True" Binding="{Binding ElementName=adorner, Path=AdornedElement.IsKeyboardFocused}">
              <TriggerBase.EnterActions>
                <BeginStoryboard x:Name="fadeInStoryboard">
                  <Storyboard>
                    <DoubleAnimation Duration="00:00:00.15" Storyboard.TargetName="errorBorder" Storyboard.TargetProperty="Opacity"
                                     To="1"/>
                  </Storyboard>
                </BeginStoryboard>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
                <BeginStoryboard x:Name="fadeOutStoryBoard">
                  <Storyboard>
                    <DoubleAnimation Duration="00:00:00" Storyboard.TargetName="errorBorder" Storyboard.TargetProperty="Opacity" To="0"/>
                  </Storyboard>
                </BeginStoryboard>
              </TriggerBase.ExitActions>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <Border x:Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="true">
            <ScrollViewer x:Name="PART_ContentHost" RenderOptions.ClearTypeHint="Enabled"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource InputTextDisabled}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="TextBoxBase.IsReadOnly" Value="true">
              <Setter Value="{DynamicResource InputTextDisabled}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <Setter TargetName="Bd" Value="{DynamicResource Accent}" Property="Border.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TextBoxBase.IsReadOnly" Value="false"/>
                <Condition Property="UIElement.IsEnabled" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource InputBackgroundHover}" Property="Control.Background"/>
              <Setter Value="{DynamicResource InputBorderHover}" Property="Control.BorderBrush"/>
              <Setter Value="{DynamicResource InputTextHover}" Property="Control.Foreground"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}"/>
  <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type RichTextBox}"/>
  <Style x:Key="DataGridTextStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="FrameworkElement.Margin" Value="2,0"/>
  </Style>
  <Style x:Key="DataGridEditingTextStyle" TargetType="{x:Type TextBox}"
         BasedOn="{StaticResource {x:Type TextBox}}">
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Padding" Value="0"/>
  </Style>
</ResourceDictionary>