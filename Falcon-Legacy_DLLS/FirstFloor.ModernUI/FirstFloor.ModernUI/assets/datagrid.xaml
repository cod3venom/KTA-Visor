<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Button.xaml"/>
    <ResourceDictionary Source="/FirstFloor.ModernUI;component/Assets/Converters.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}"
         TargetType="{x:Type Button}" BasedOn="{StaticResource BaseButtonStyle}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
  </Style>
  <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <Grid>
            <DataGridColumnHeader Name="PART_FillerColumnHeader" IsHitTestVisible="false"/>
            <ItemsPresenter/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.Width" Value="8"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="FrameworkElement.Cursor" Value="SizeWE"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.Height" Value="8"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="FrameworkElement.Cursor" Value="SizeNS"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="{TemplateBinding Control.Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColumnFloatingHeaderStyle" TargetType="{x:Type Control}">
    <Setter Property="UIElement.Opacity" Value="0.6"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                  Background="{TemplateBinding Control.Background}">
            <Grid>
              <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding FrameworkElement.Margin}"/>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColumnHeaderDropSeparatorStyle" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{DynamicResource DataGridDropSeparator}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type DataGridRow}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    <Setter Property="DataGridRow.ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="#FFdc000c" Text="!"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Border x:Name="DGR_Border" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <SelectiveScrollingGrid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding DataGridRow.ItemsPanel}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" Visibility="{TemplateBinding DataGridRow.DetailsVisibility}"
                                        SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"/>
              <DataGridRowHeader SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Grid.RowSpan="2"
                                 Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
            </SelectiveScrollingGrid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource DataGridCellBackgroundHover}" Property="Control.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type DataGridCellsPresenter}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
          <ItemsPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type DataGridCell}">
    <Setter Property="Control.Background" Value="{DynamicResource DataGridCellBackground}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DataGridCellForeground}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Padding" Value="5,1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource DataGridCellBackgroundHover}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource DataGridCellForegroundHover}"/>
      </Trigger>
      <Trigger Property="DataGridCell.IsSelected" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource DataGridCellBackgroundSelected}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource DataGridCellForegroundSelected}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="Control.Background" Value="{DynamicResource DataGridHeaderBackground}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DataGridHeaderForeground}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.FontWeight" Value="Bold"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource DefaultFontFamily}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource DefaultFontSize}"/>
    <Setter Property="Control.Padding" Value="4,3,4,3"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}">
              <Grid x:Name="containerGrid" Margin="5">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter Grid.Column="0" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                <Path x:Name="SortArrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Width="8" Height="6" Margin="5,0,5,0" Stretch="Fill" Opacity="0.5"
                      Fill="{TemplateBinding Control.Foreground}" RenderTransformOrigin="0.5,0.4" Visibility="Hidden"
                      Data="M 0,0 L 1,0 0.5,1 Z"/>
              </Grid>
            </Border>
            <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right"
                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Ascending">
              <Setter TargetName="SortArrow" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="SortArrow" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="DataGridColumnHeader.SortDirection" Value="Descending">
              <Setter TargetName="SortArrow" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource DataGridHeaderBackgroundHover}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Control.Background" Value="{DynamicResource DataGridHeaderBackground}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DataGridHeaderForeground}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource DataGridGridLines}"/>
    <Setter Property="Control.BorderThickness" Value="0,0,0,1"/>
    <Setter Property="FrameworkElement.Width" Value="16"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}">
              <StackPanel Orientation="Horizontal">
                <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center"/>
                <Control SnapsToDevicePixels="false"
                         Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource BooleanToVisibilityConverter}}"
                         Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=ValidationErrorTemplate}"/>
              </StackPanel>
            </Border>
            <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top"
                   Style="{StaticResource RowHeaderGripperStyle}"/>
            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom"
                   Style="{StaticResource RowHeaderGripperStyle}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource DataGridHeaderBackgroundHover}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}"/>
      </Trigger>
      <Trigger Property="DataGridRowHeader.IsRowSelected" Value="true">
        <Setter Property="Control.Background" Value="{DynamicResource DataGridHeaderBackgroundSelected}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource DataGridHeaderForegroundSelected}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type DataGrid}">
    <Setter Property="Control.Background" Value="{DynamicResource DataGridBackground}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource DataGridForeground}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="DataGrid.RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
    <Setter Property="DataGrid.HorizontalGridLinesBrush" Value="{DynamicResource DataGridGridLines}"/>
    <Setter Property="DataGrid.VerticalGridLinesBrush" Value="{DynamicResource DataGridGridLines}"/>
    <Setter Property="DataGrid.DragIndicatorStyle" Value="{StaticResource ColumnFloatingHeaderStyle}"/>
    <Setter Property="DataGrid.DropLocationIndicatorStyle"
            Value="{StaticResource ColumnHeaderDropSeparatorStyle}"/>
    <Setter Property="DataGrid.GridLinesVisibility" Value="Horizontal"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true"
                  Padding="{TemplateBinding Control.Padding}">
            <ScrollViewer Name="DG_ScrollViewer" Focusable="false">
              <Control.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false"
                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                            Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}}"
                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}"/>
                    <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter" Grid.Column="1"
                                                    Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}"/>
                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2"
                                            CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"/>
                    <ScrollBar Name="PART_VerticalScrollBar" Grid.Row="1" Grid.Column="2" Orientation="Vertical"
                               Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                               ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                               Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"
                               Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                    <Grid Row="2" Column="1">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <ScrollBar Name="PART_HorizontalScrollBar" Grid.Column="1" Orientation="Horizontal"
                                 Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                                 ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                                 Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"
                                 Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
                    </Grid>
                  </Grid>
                </ControlTemplate>
              </Control.Template>
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ItemsControl.IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>